{"version":3,"sources":["hooks/posts.js","components/Preloader.js","components/Post.js","pages/Posts.js","pages/PostNew.js","pages/PostById.js","components/App.js","index.js"],"names":["fetchPosts","a","fetch","res","json","Error","fetchPostById","postId","createPost","title","body","method","headers","Accept","JSON","stringify","Preloader","className","mix","Post","props","id","join","Posts","useQuery","data","isLoading","useFetchPosts","to","map","PostNew","formRef","useRef","useState","isValid","setIsValid","setTitle","setBody","useMutation","post","setPost","mutate","isSuccess","useCreatePost","formElement","onSubmit","e","preventDefault","onChange","validationMap","Array","from","current","elements","el","validity","valid","every","ref","noValidate","placeholder","required","target","value","disabled","successElement","PostById","useParams","useFetchPostById","App","path","exact","queryClient","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","client","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.8f480193.chunk.js","sourcesContent":["import { useQuery, useMutation } from 'react-query';\n\nconst fetchPosts = async () => {\n  try {\n    const res = await fetch('https://jsonplaceholder.typicode.com/posts');\n    return res.json();\n  } catch (error) {\n    throw Error;\n  }\n};\n\nconst fetchPostById = async (postId) => {\n  try {\n    const res = await fetch(`https://jsonplaceholder.typicode.com/posts/${postId}`);\n    return res.json();\n  } catch (error) {\n    throw Error;\n  }\n};\n\nconst createPost = async ({ title, body }) => {\n  try {\n    const res = await fetch('https://jsonplaceholder.typicode.com/posts', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ title, body }),\n    });\n    return res.json();\n  } catch (error) {\n    throw Error;\n  }\n};\n\nexport const useFetchPosts = () => {\n  const { data, isLoading } = useQuery('posts', fetchPosts);\n  return { data, isLoading };\n};\n\nexport const useFetchPostById = (postId) => {\n  const { data, isLoading } = useQuery(['posts', postId], () => fetchPostById(postId));\n  return { data, isLoading };\n};\n\nexport const useCreatePost = () => {\n  const { mutate, isLoading, isSuccess } = useMutation((post) => createPost(post));\n  return { setPost: mutate, isLoading, isSuccess };\n};\n","import './Preloader.css';\n\nconst Preloader = ({ className = '' }) => {\n  const mix = !!className ? ` ${className}` : '';\n\n  return (\n    <div className={'preloader w-8 h-8 border-4 text-blue-500' + mix} />\n  );\n};\n\nexport default Preloader;\n","const Post = (props) => {\n  const {\n    id,\n    title,\n    body,\n    className = '',\n  } = props;\n\n  const mix = !!className ? ` ${className}` : '';\n\n  return (\n    <div\n      className={[\n        'post',\n        'hover:bg-gray-50',\n        'bg-white',\n        'rounded-md',\n        'shadow-xl',\n        'p-4',\n        'transition',\n        mix,\n      ].join(' ')}\n    >\n      <h3\n        className=\"post__title\n        text-xl text-blue-700 mb-4 uppercase\"\n      >\n        { title }\n      </h3>\n      <p\n        className=\"post__body\"\n      >\n        { body }\n        </p>\n    </div>\n  );\n};\n\nexport default Post;\n","import { Link } from 'react-router-dom';\nimport { useFetchPosts } from '../hooks/posts';\nimport Preloader from '../components/Preloader';\nimport Post from '../components/Post';\n\nconst Posts = () => {\n  const { data = [], isLoading } = useFetchPosts();\n\n  return (\n    <div className=\"posts container mx-auto p-8\">\n      <div className=\"posts__title-container flex items-center mb-8\">\n        <h2 className=\"posts__title text-4xl font-extrabold\">Posts</h2>\n        {isLoading && <Preloader className=\"ml-6\" />}\n        <Link\n          className={[\n            'posts__button-new-post',\n            'text-white',\n            'hover:bg-blue-700',\n            'bg-blue-500',\n            'rounded-md',\n            'shadow-xl',\n            'px-4',\n            'py-2',\n            'transition',\n            'ml-auto',\n          ].join(' ')}\n          to=\"/posts/new\"\n        >\n          + New post\n        </Link>\n      </div>\n      <section\n        className=\"posts__grid\n        grid grid-cols-1 md:grid-cols-2 gap-8\"\n      >\n        { data.map(({ id, title, body }) => (\n          <Link\n            className=\"flex\"\n            to={`/posts/${id}`}\n            key={ id }\n          >\n            <Post\n              id={ id }\n              title={ title }\n              body={ body }\n            />\n          </Link>\n        )) }\n      </section>\n    </div>\n  );\n};\n\nexport default Posts;\n","import { useState, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useCreatePost } from '../hooks/posts';\nimport Preloader from '../components/Preloader';\n\nconst PostNew = () => {\n  const formRef = useRef(null);\n\n  const [isValid, setIsValid] = useState(false);\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n\n  const { setPost, isLoading, isSuccess } = useCreatePost();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setPost({ title, body });\n  };\n\n  const handleValid = (e) => {\n    const validationMap = Array\n      .from(formRef.current.elements)\n      .map((el) => el.validity.valid);\n    setIsValid(validationMap.every((el) => el));\n  };\n\n  const formElement = (\n    <form\n      className=\"grid gap-4 mb-8\"\n      onSubmit={handleSubmit}\n      onChange={handleValid}\n      ref={formRef}\n      noValidate\n    >\n      <input\n        className={[\n          'post-new-title',\n          'h-10',\n          'w-full',\n          'px-4',\n          'border',\n          'border-gray-300',\n          'focus:border-blue-700',\n          'rounded-md',\n          'text-gray-700',\n          'bg-white',\n          'focus:outline-none',\n          'focus:ring-4',\n          'focus:ring-blue-300',\n          'transition',\n        ].join(' ')}\n        placeholder=\"Title\"\n        required\n        onChange={ (e) => setTitle(e.target.value) }\n      />\n      <textarea\n        className={[\n          'post-new-title',\n          'h-10',\n          'w-full',\n          'h-64',\n          'px-4',\n          'py-2',\n          'border',\n          'border-gray-300',\n          'focus:border-blue-700',\n          'rounded-md',\n          'text-gray-700',\n          'bg-white',\n          'focus:outline-none',\n          'focus:ring-4',\n          'focus:ring-blue-300',\n          'transition',\n        ].join(' ')}\n        placeholder=\"Body\"\n        required\n        onChange={ (e) => setBody(e.target.value) }\n      />\n      <button\n        disabled={ !isValid }\n        className={[\n          'posts__button-new-post',\n          'text-white',\n          'hover:bg-blue-700',\n          'bg-blue-500',\n          'rounded-md',\n          'shadow-xl',\n          'px-4',\n          'py-2',\n          'transition',\n          'ml-auto',\n          'disabled:bg-gray-300',\n          'disabled:pointer-events-none',\n          'focus:outline-none',\n        ].join(' ')}\n        to=\"/posts/new\"\n      >\n        Submit\n      </button>\n    </form>\n  );\n\n  const successElement = (\n    <div\n      className=\"bg-yellow-300 rounded-md shadow-xl p-4 mb-8\"\n    >\n      К сожалению, тестовый REST API JSONPlaceholder на самом деле\n      не добавляет ресурс на сервер, а лишь возвращает ответ.\n      Если вы это видите, сервер ответил — всё в порядке.\n      Поверим на слово =)\n    </div>\n  );\n\n  return (\n    <div className=\"post-new container mx-auto p-8\">\n      <div className=\"post-new__title-container flex items-center mb-8\">\n        <h2 className=\"post-new__title text-4xl font-extrabold\">New post</h2>\n        {isLoading && <Preloader className=\"ml-6\" />}\n      </div>\n      <section\n        className=\"post-new__section\"\n      >\n        {!isSuccess\n          ? formElement\n          : successElement\n        }\n        <Link className=\"text-blue-700 mt-8\" to=\"/posts\">← Назад</Link>\n      </section>\n    </div>\n  );\n};\n\nexport default PostNew;\n","import { Link, useParams } from 'react-router-dom';\nimport { useFetchPostById } from '../hooks/posts';\nimport Preloader from '../components/Preloader';\nimport Post from '../components/Post';\n\nconst PostById = () => {\n  const { id } = useParams();\n  const { data, isLoading } = useFetchPostById(id);\n\n  return (\n    <div className=\"post-id container mx-auto p-8\">\n      <div className=\"post-id__title-container flex items-center mb-8\">\n        <h2 className=\"post-id__title text-4xl font-extrabold\">Post by ID {id}</h2>\n        {isLoading && <Preloader className=\"ml-6\" />}\n      </div>\n      <section\n        className=\"post-id__section\"\n      >\n        <Post\n          className=\"mb-8\"\n          id={ id }\n          title={ data?.title }\n          body={ data?.body }\n        />\n        <Link className=\"text-blue-700 mt-8\" to=\"/posts\">← Назад</Link>\n      </section>\n    </div>\n  );\n};\n\nexport default PostById;\n","import { Switch, Route, Redirect } from 'react-router-dom';\nimport Posts from '../pages/Posts';\nimport PostNew from '../pages/PostNew';\nimport PostById from '../pages/PostById';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Switch>\n\n        <Route path=\"/posts\" exact>\n          <Posts />\n        </Route>\n\n        <Route path=\"/posts/new\">\n          <PostNew />\n        </Route>\n\n        <Route path=\"/posts/:id\">\n          <PostById />\n        </Route>\n\n        <Route path=\"/*\">\n          <Redirect to=\"/posts\" />\n        </Route>\n\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App';\nimport './index.css';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <App />\n      </BrowserRouter>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}